name: Sten's CI/CD
run-name: "Sten's CI/CD"

on:
  push:
    branches: []

jobs:
  keyword_check:
    name: Keyword Check
    runs-on: ${{ matrix.os }}
    if: contains(github.event.head_commit.message, '.deploy')
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - id: keyword_check
        run: echo "Keyword Check Passed"

  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        version: [3.12]
    steps:
      - id: checkout
        uses: actions/checkout@main

      - id: setup_python
        uses: actions/setup-python@main
        with:
          python-version: ${{ matrix.version }}
          cache: "pip"

      - id: install_dependencies
        name: Install Dependencies
        run: |
          pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt

      - id: build_package
        name: Build Package
        run: python -m build

      - id: create_tag
        name: Create & Push Tag
        run: echo TAG=$(python setup.py --version) >> $GITHUB_OUTPUT
        shell: bash

      - id: create_release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.TAG }}
          draft: false
          prerelease: false

      - id: release_badge
        if: always()
        uses: schneegans/dynamic-badges-action@master
        with:
          auth: ${{ secrets.GIST_ACCESS_TOKEN }}
          gistID: ${{ secrets.GIST_ID }}
          filename: release_badge.json
          label: Release
          message: ${{ job.status }}
          color: ${{ job.status == 'success' && 'brightgreen' || 'red' }}
          namedLogo: hackthebox
          logoColor: white
          style: flat-square

  documentation:
    name: Documentation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        version: [3.12]
    steps:
      - id: checkout
        uses: actions/checkout@main

      - id: setup_python
        uses: actions/setup-python@main
        with:
          python-version: ${{ matrix.version }}
          cache: "pip"

      - id: install_dependencies
        name: Install Dependencies
        run: |
          pip install --upgrade pip && pip install --no-cache-dir -r requirements.txt

      - id: generate_docs
        name: Generate Docs
        run: |
          pdoc3 -f -o AutoFrameCAD/docs AutoFrameCAD

      - id: deploy_docs
        uses: Andrew-Chen-Wang/github-wiki-action@v4.4.0
        with:
          path: AutoFrameCAD/docs

      - id: docs_badge
        if: always()
        uses: schneegans/dynamic-badges-action@master
        with:
          auth: ${{ secrets.GIST_ACCESS_TOKEN }}
          gistID: ${{ secrets.GIST_ID }}
          filename: docs_badge.json
          label: Docs
          message: ${{ job.status }}
          color: ${{ job.status == 'success' && 'brightgreen' || 'red' }}
          namedLogo: googledocs
          logoColor: white
          style: flat-square
